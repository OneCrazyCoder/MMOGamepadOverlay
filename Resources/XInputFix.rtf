{\rtf1\ansi\ansicpg1252\deff0\deflang1033
{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
\viewkind4\uc1\pard\sa200\sl276\slmult1\f0\fs22\lang9

\fs22 Some games don't offer a way to disable gamepad support. When this app redirects gamepad buttons to act as keyboard & mouse input, the game can also directly respond to the original button press - leading to double actions, unwanted inputs, or canceled effects.\par

Even if a game has no obvious gamepad support, it might still {\i unintentionally} react in surprising ways due to default gamepad support provided by the game's engine. Run the game {\i without} this app running and thoroughly check to make sure the game ignores {\i all} gamepad input to see if this fix is needed.\par

{\b\fs26 WHAT THIS DOES\par}
\fs22 Two tiny files ({\i xinput1_3.dll} and {\i xinput1_4.dll}) are created in the same folder as the game client application. The game will find and use these harmless placeholders before looking for the real ones in your system folder - preventing its {\i direct} access to XInput gamepads. This is:\par

{\pard\sa100\sl180\slmult1\fi-360\li720\fs22\bullet  {\b Reversible}: Simply delete the files\par}
{\pard\sa100\sl180\slmult1\fi-360\li720\fs22\bullet  {\b Safe}: No game or system files are modified\par}
{\pard\sa100\sl320\slmult1\fi-360\li720\fs22\bullet  {\b Local}: Only affects this specific game\par}

{\pard\sa200\sl276\slmult1\b\fs26 ALTERNATIVE FIX\par}
\pard\sa200\sl276\slmult1\fs22 Special driver software like {\b HidHide} can also block a game from reacting to gamepad input - but it may already be configured for tools like {\b DS4Windows}. Unfortunately, HidHide cannot simultaneously:\par
{\pard\sa100\sl180\slmult1\fi-360\li720\fs22 1)  Hide {\b all} controllers from {\b one} game (for this issue)\par}
{\pard\sa100\sl276\slmult1\fi-360\li720\fs22 2)  Hide {\b one} controller from {\b all} games (for DS4Windows)\par}
\pard\sa200\sl276\slmult1\fs22 The fix used here works alongside HidHide without configuration conflicts.\par
}

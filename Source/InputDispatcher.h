//-----------------------------------------------------------------------------
//	Originally written by Taron Millet, except where otherwise noted
//-----------------------------------------------------------------------------

#pragma once

/*
	Coordinates and dispatches input actions to be sent to the target game.
	Manages input queues, processes actions, and handles overlapping inputs
	generated by the InputTranslator module.
*/

#include "Common.h"

namespace InputDispatcher
{

// Load configuration settings from current profile
void loadProfile();

// Call once per frame to process the queue and dispatch input
void update();

// Clean up and prepares for app shutdown
void cleanup();

// Sends the input for a macro
// If the first character is '/', sends a string sequence
// Otherwise expects a series of keyboard scan codes
void sendMacro(const std::string& theMacro);

// Directly move the mouse cursor relative to current position
// Amount specified by dx/dy is in relation to mouse speed
// settings, and expected range of -255 to 255
void shiftMouseCursor(int dx, int dy, bool digital);

} // InputDispatcher
